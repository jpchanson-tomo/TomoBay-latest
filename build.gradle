/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'orpheus' at '13/06/16 10:19' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

plugins {
  id "org.ysb33r.doxygen" version "0.2"
  id "com.github.samueltbrown.cucumber" version "0.9"
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'org.ysb33r.doxygen'
apply plugin: "com.github.samueltbrown.cucumber"


// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	
    testCompile 'junit:junit:4.12'
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.4'
    compile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.4'
    
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'c3p0', name: 'c3p0', version: '0.9.0.4'
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.5.5'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.5'
    compile group: 'javax.json', name: 'javax.json-api', version: '1.0'
    compile group: 'org.glassfish', name: 'javax.json', version: '1.0.4'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.3.9.v20160517'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.3.9.v20160517'
	compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.2'
    compile group: 'com.mchange', name: 'mchange-commons-java', version: '0.2.12'
    
    compile fileTree(dir: 'src/main/resources/libs/ebay/', include: ['*.jar'])
    compile fileTree(dir: 'src/main/resources/libs/ebayDependancies/', include: ['*.jar'])
}

doxygen {
	template '../docs/TomoBay.doxyfile'
}

//set junit test report directory
test {
	testReportDirName = file("$rootProject.projectDir/docs/ProjHealth/JUnit")
}

//set dependancy report directory
htmlDependencyReport {
	projectReportDirName = "$rootProject.projectDir/docs/ProjHealth/ProjReports"
}

jar {
	manifest {
		attributes (
			'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
			'Main-Class': 'com.tomoparts.tomoBay.MAIN'
		)
	}
}

testClasses.dependsOn(projectReport);